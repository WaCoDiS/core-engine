spring:
  application:
    name: core-engine
  profiles:
    active: docker
  cloud:
    config:
      url: http://localhost:8888
    stream:
    #InputChannel
      bindings:
        input-data-envelope:
          destination: wacodis.test.data.available
          binder: wacodis_rabbit
          content-type: application/json
        job-creation:
          destination: wacodis.test.jobs.new
          binder: wacodis_rabbit
          content-type: application/json
        newProduct:
          destination: wacodis.test.data.available
          binder: wacodis_rabbit
          content-type: application/json
        toolExecution:
          destination: wacodis.test.tools.execute
          binder: wacodis_rabbit
          content-type: application/json
      #MessageBroker
      binders:
        wacodis_rabbit:
          type: rabbit
  rabbitmq:
    host: localhost
    port: 5672
    username: rabbitmq
    password: rabbitmq
  scheduler:
     jobrepository:
        uri: http://localhost:8081
  evaluator:
    matching:
        minimumOverlapPercentage: 50.0
    dataaccess:
        uri: http://localhost:8082
  datasource.core.quartz-data-source:
    name: quartzDataSource
    driverClassName: org.h2.Driver
    # jdbc-url: jdbc:h2:file:./src/main/resources/h2_Jobstore
    jdbc-url: jdbc:h2:file:/usr/share/wacodis/data/h2_wacodis_core_jobs
    username: sa
    password:
  quartz:
    job-store-type: jdbc
    jdbc:
      initialize-schema: always
    properties:
      org.quartz.jobStore:
        dataSource: quartzDataSource
        class: org.quartz.impl.jdbcjobstore.JobStoreTX
        driverDelegateClass: org.quartz.impl.jdbcjobstore.StdJDBCDelegate
        useProperties: true
        misfireThreshold: 60000
        tablePrefix: QRTZ_
        isClustered: true